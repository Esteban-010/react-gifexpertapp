{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifDridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifDridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAyB9C,OACI,sBAAMC,SAhBW,SAACC,GAElBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAI1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAQlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SA1Bc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCF,EAFnC,+DAGAG,MAAMD,GAHN,cAGbE,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAVtB,kBAcZK,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOT,EAAU,EAAVA,IAIrC,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMN,IACvB,4BAAKA,QCLJO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECAb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAqBtC,OAdAC,qBAAU,WACNvB,EAAQC,GACHuB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACnB,IAKGoB,EDlB0BK,CAAazB,GAAjCY,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAGrB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDf,IAElDmB,GAAW,wCAEb,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACN,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEjB5BgB,EAAe,WAAO,IAAD,EAEMxC,mBAAS,CAAC,kBAFhB,mBAEvByC,EAFuB,KAEX1C,EAFW,KAK9B,OACI,qCACA,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ0C,EAAWnB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAWA,GADLA,Y,MCX1B4B,IAASC,OACH,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8c750887.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n\r\n        setInputValue(e.target.value);\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0){\r\n\r\n            // setcategories([...categories, 'HunterXHunter']);\r\n            \r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit= { handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=10&api_key=qjCsa7njGqjdS8svWi0RdFDpzNs7L6WY`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    \r\n    const gifs = data.map(img => {\r\n        return {\r\n            id : img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifDridItem = ({ id, title, url }) => {\r\n    \r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\" >\r\n            <img src={ url } alt={ title }/>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifDridItem } from './GifDridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n            { loading && <p>Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                        \r\n                    {\r\n                        images.map(img => \r\n                                <GifDridItem \r\n                                key={img.id} \r\n                                { ...img }\r\n                                />\r\n                            )\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n\r\n            })\r\n    }, [category])\r\n    \r\n    \r\n\r\n\r\n    return state;\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch Man']); // categories = ['One Punch Man']\r\n\r\n\r\n    return (\r\n        <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => \r\n                    <GifGrid \r\n                    key={ category }\r\n                    category={ category }\r\n                    />\r\n                )\r\n\r\n            }\r\n        </ol>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n      <GifExpertApp />,\n      document.getElementById('root')\n);\n"],"sourceRoot":""}